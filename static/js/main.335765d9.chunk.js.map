{"version":3,"sources":["components/PortfolioContent.module.css","components/TextFx.js","components/GridImg.module.css","fonts/FuturaBoldfont.ttf","fonts/FuturaMediumBT.ttf","components/PortfolioBG.js","components/GridImg.js","components/ImgGridSystem.js","components/Menu.js","components/InteractiveBG/Effects.js","components/InteractiveBG/SwarmGroup.js","components/PortfolioContentV2.js","App.js","serviceWorker.js","index.js","components/Menu.module.css"],"names":["module","exports","CharPoses","exit","opacity","y","enter","transition","type","delay","charInWordIndex","Math","floor","random","PortfolioBG","GridImg","props","useSpring","xys","config","mass","tension","friction","animationCard","set","calc","useRef","x","window","innerHeight","innerWidth","className","styles","cardContainer","div","onMouseMove","clientX","clientY","onMouseLeave","style","transform","interpolate","s","to","pathname","projectId","content","title","replace","imgContainer","eachImage","src","alt","overlay","textOverlay","cardText","initialPose","pose","charPoses","TextFx","cardCo","partner","cardCate","category","ImgGridSystem","from","useEffect","scrollTo","gridimg","id","descriptions","map","myimg","key","Menu","menu","join","activeClassName","homeOn","exact","recent","myName","aboutOn","about","_load","SMAAImageLoader","prototype","load","_","bind","this","Swarm","display","count","mouse","mesh","dummy","useMemo","THREE","particles","temp","i","t","factor","speed","xFactor","yFactor","zFactor","push","mx","my","useFrame","state","forEach","particle","a","cos","sin","b","max","current","position","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","attach","color","transparent","SwarmGroup","isAbout","gl","alpha","antialias","logarithmicDepthBuffer","camera","fov","onCreated","toneMapping","outputEncoding","intensity","fallback","PortfolioCotentV2","videoShow","imgsShow","ImgNVideo","params","useParams","eachContent","PortfolioData","history","useHistory","videoLink","eachVideo","index","h_iframe","frameBorder","allow","allowFullScreen","imgsScrs","eachImg","imgFolder","videoTop","buttonToWeb","button","eachButton","OutboundLink","eventLabel","buttonName","target","trackerNames","onClick","ReactGa","event","action","contentContainer","imgList","descriptionBar","toolList","tools","descriptionText","dangerouslySetInnerHTML","__html","About","React","lazy","ErrorPage","withRouter","initialize","pageview","location","hash","search","useCallback","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.335765d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"PortfolioContent_contentContainer__IhJEn\",\"toolList\":\"PortfolioContent_toolList__30-hx\",\"buttonToWeb\":\"PortfolioContent_buttonToWeb__3D_YO\",\"descriptionBar\":\"PortfolioContent_descriptionBar__tD86r\",\"fadein\":\"PortfolioContent_fadein__2PAsg\",\"imgList\":\"PortfolioContent_imgList__2ZZaW\",\"h_iframe\":\"PortfolioContent_h_iframe__U3Ma3\",\"descriptionText\":\"PortfolioContent_descriptionText__WIqNT\"};","\n const CharPoses =  {\n    exit: { opacity: 0, y: 0 },\n    enter: {\n      opacity: 1,\n      y: 0,\n  \n      transition: ({ charInWordIndex }) => ({\n        type: \"spring\",\n        \n        // delay: charInWordIndex * 130\n        delay: charInWordIndex + Math.floor(Math.random() * 10) * 150\n        // stiffness: 500 + charInWordIndex * 1,\n        // damping: 10 - charInWordIndex * 1\n      })\n    }\n  };\n  export default CharPoses;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardContainer\":\"GridImg_cardContainer__13O9W\",\"overlay\":\"GridImg_overlay__1_fgX\",\"cardText\":\"GridImg_cardText__S9D7f\",\"eachImage\":\"GridImg_eachImage__2vgxk\",\"textOverlay\":\"GridImg_textOverlay__3Gkqw\",\"cardCo\":\"GridImg_cardCo__2i9gA\",\"cardCate\":\"GridImg_cardCate__275wC\",\"imgContainer\":\"GridImg_imgContainer__2qLJ_\",\"fadein\":\"GridImg_fadein__fUSsr\",\"floating\":\"GridImg_floating__cHiH8\"};","module.exports = __webpack_public_path__ + \"static/media/FuturaBoldfont.4c62644b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/FuturaMediumBT.ee64fb9d.ttf\";","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport {Box} from './Box';\nimport MyModel from './myModel/MyModel'\n\n// import Box from './components/Box'\nimport '../App.css';\n\n\n\nfunction PortfolioBG (props){\n// const mesh = useRef();\n\n\n\n    return (\n        <div className=\"canvasContainer\">\n        \n            <Canvas>\n            <pointLight position={[10, 10, 10]} />\n                {/* <mesh>\n                <sphereBufferGeometry attach=\"geometry\" />\n                <meshStandardMaterial attach=\"material\" color=\"hotpink\" />\n                </mesh> */}\n                \n                <Box position={[1.2, 0, 0]} />\n                <MyModel position={[0, 0, 0]}  />\n                    \n            </Canvas>\n\n        </div>\n);\n}\n\n\nexport default PortfolioBG;","import React,{useEffect, useRef} from 'react';\nimport ReactDOM from \"react-dom\";\nimport styles from \"./GridImg.module.css\";\nimport SplitText from \"react-pose-text\";\nimport TextFx from './TextFx';\n// import React, {Suspense} from 'react-image'\n// import {useImage} from 'react-image'\n\nimport { NavLink, Switch} from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\nconst GridImg = (props)=>{\n\n\n\n// const calc = (x, y) => [-(y - element.clientHeight / 2) / 30, (x - element.clientHeight / 2) / 30, 0.9]\n// const trans = (x, y, s) => `perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\nconst trans = (x, y, s) => `perspective(1000px) scale(${s}) `;\nconst trans2 = (x, y, s) => `perspective(700px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\nconst [animationCard, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n\nconst cardref = useRef();\n\n// let cardX,cardY;\n// useEffect(() => {\n//     document.onreadystatechange = () => {\n//        cardX=cardref.current.clientHeight;\n//        cardY= cardref.current.clientWidth;\n//       console.log(cardref.current.clientHeight);\n//       console.log(cardref.current.clientWidth);\n//     };\n//   }, []);\n\n  const calc = (x, y) => [-(y - window.innerHeight / 2) / 30, (x - window.innerWidth / 2) / 30, 0.9]\n\n\n\n    return (\n        <>\n     \n        <div  className ={styles.cardContainer}  >\n        <animated.div \n                    onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: animationCard.xys.interpolate(trans) }}>\n                <NavLink to={{pathname:'/'+props.projectId+\"/\"+props.content.title.replace(/\\s/g, '')}} >\n           \n                \n                <div className={styles.imgContainer} >\n                    <img className={styles.eachImage}  src={\"/assets/GridImg/\"+props.content.src } alt={props.content.title}/>\n               \n                    <div className={styles.overlay} >                   \n                    </div>\n                </div>\n               \n               \n                <div className={styles.textOverlay} >\n                <animated.div \n                    onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: animationCard.xys.interpolate(trans2) }}>\n                    <h1 className={styles.cardText}> \n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.title }\n                    </SplitText>    \n                    </h1>\n                    \n                    <div className={styles.cardCo}>\n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.partner}\n                    </SplitText>\n                    </div>\n                    <div className={styles.cardCate}>\n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.category}\n                        </SplitText>\n                    </div>\n                    {/* <p className={styles.cardCo}>Web Application</p> */}\n                    </animated.div>\n                </div>\n               \n               \n                </NavLink>  \n                </animated.div>\n        </div>\n       \n        </>\n    )\n}\n\n\nexport default GridImg; ","import React, { useRef, useState, useEffect }from 'react';\nimport ReactDOM from \"react-dom\";\n// import React, {Suspense} from 'react-image'\n// import {useImage} from 'react-image';\nimport GridImg  from './GridImg';\nimport PortfolioCotent from './PortfolioContent';\nimport {useSpring, animated} from 'react-spring';\nimport ReactGa from 'react-ga';\n// import gobackIcon from '../icons/chevron-left.svg';\n\nimport {Route, NavLink, Switch} from 'react-router-dom';\n\nconst ImgGridSystem = (props)=>{\n\n   \n    const fadeinAnimation = useSpring({opacity: 1, from: {opacity: 0}})\n\n    let imgList = [\n        {id: 0, src: 'wcma2.jpg', title: 'All AT ONCE - WCMA', partner:\"Studio TheGreenEyl\", category:\"creative web app\", descriptions:\"tqqqqqqghis adsd <br> sdf <b>sdads</b> adsqwewqrwqrwqrwq\"},\n        {id: 1, src: 'TNC3.jpg', title: 'MEGA CITY',partner:\"The Natrual Conservancy\", category:\"web app, interactive storytelling\", descriptions:'wqex ff sdsfq'},\n        {id: 2, src: 'ProductDesign.jpg', title: 'FIRIS', partner:\"Cornell Start-up Studio\", category:\"ui/ux, product design, motion \",descriptions:'ffffff adsd sds fqrwqrwq'},\n        {id: 3, src: 'MET2.png', title: 'MET',partner:\"Metropolitan Museum of Art\", category:\"creative app\", descriptions:'sdawr adsd sds ff sdadsadsqwewqrwqrwqrwq'},\n        {id: 4, src: 'Peeq2.png', title: 'PEEQ',partner:\"Peeq Data Inc\", category:\"ui/ux, motion, video\", descriptions:'ffffff adsd sds fqrwqrwq'},\n        {id: 5, src: 'Games2.jpg', title: 'BLUE DESERT DISCO', partner:\"Wonderville Brooklyn\", category:\"game development, phsyical computing\",descriptions:'ffffff adsd sds fqrwqrwq'}\n    ]; \n    // let isImgClicked = false;\n    // let activeId ='';\n    const [animationCard, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 60 } }))\n    const trans = (x, y, s) => `perspective(1000px) scale(${s}) `;\n    const trans2 = (x, y, s) => `perspective(2500px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\n    \n    const calc = (x, y) => [-(y - window.innerHeight / 2) / 150, (x - window.innerWidth / 2) / 150, 0.95]\n    // const calc = (x, y) => [-(y - element.clientHeight / 2) / 30, (x - element.clientHeight / 2) / 30, 0.9]\n// const trans = (x, y, s) => `perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\n\n    const cardref = useRef();\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n \n    \n \n      \n      let gridimg = null;\n  \n        gridimg=(// return (\n          <animated.div \n          onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n          onMouseLeave={() => set({ xys: [0, 0, 1] })}\n          style={{ transform: animationCard.xys.interpolate(trans2) }}> \n           <div className=\"gridSystem\"> \n            \n            { imgList.map((myimg)=>{\n            return (\n                \n              \n                    <GridImg key={myimg.id} \n                             projectId={myimg.id}   \n                             content={myimg}\n                             />\n                       \n                    )\n            })}\n          \n           </div>\n           </animated.div>\n         )\n\n\n\n\n\n    return (\n        <>\n            {/* <div></div> */}\n        {/* <div className=\"gridSystem\">     */}\n        <div className=\"projectContentContainer\">  \n          <div className=\"gridContainer\">\n            {gridimg}\n          </div>\n        </div>\n            {/* {projectContent} */}\n         {/* </div> */}\n\n      \n        \n         </>\n    );\n\n\n}\n\nexport default ImgGridSystem ; ","import React, {useEffect} from 'react';\nimport { render } from '@testing-library/react';\nimport styles from './Menu.module.css';\nimport SplitText from \"react-pose-text\";\nimport TextFx from './TextFx'\nimport {NavLink} from 'react-router-dom';\n\nconst Menu=(props)=>{\n    \n \n    return (\n        <div className={[styles.menu, \"noselect\"].join(' ')}> \n        \n          {/* <div className={(props.isAbout?styles.homeOff:styles.homeOn)} onClick={props.onClickHome} > */}\n          \n          <NavLink \n                activeClassName={styles.homeOn}\n                to={{pathname:'/'}}                 \n                exact > \n          < div className={styles.recent}>\n        \n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n           recent by\n          </SplitText>\n         \n          </div>   < span className={styles.myName}> \n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n            dān rǎn\n          </SplitText>\n          </span> \n          </NavLink>\n        {/* </div> */}\n        \n        {/* <div className={(!props.isAbout?styles.aboutOff:styles.aboutOn)} onClick={props.onClickAbout}> */}\n       \n        <NavLink \n                activeClassName={styles.aboutOn}\n                to={{pathname:'/About'}}                 \n                > \n        < span className={styles.about}> \n        <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n            about\n            </SplitText>\n        </span>\n        </NavLink>\n        {/* </div> */}\n        \n        \n      </div>\n\n    )\n\n}\n\nexport default Menu;","import { useMemo, useEffect } from 'react'\nimport { useLoader, useThree, useFrame } from 'react-three-fiber'\nimport { SMAAImageLoader, BlendFunction, EffectComposer, EffectPass, RenderPass, SMAAEffect, SSAOEffect, NormalPass } from 'postprocessing'\n\n// Fix smaa loader signature\nconst _load = SMAAImageLoader.prototype.load\nSMAAImageLoader.prototype.load = function(_, set) {\n  return _load.bind(this)(set)\n}\n\nexport default function Post() {\n  const { gl, scene, camera, size } = useThree()\n  const smaa = useLoader(SMAAImageLoader)\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const smaaEffect = new SMAAEffect(...smaa)\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n    const normalPass = new NormalPass(scene, camera)\n    const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1, // Render distance depends on camera near&far.\n      distanceFalloff: 0.0, // No need for falloff.\n      rangeThreshold: 0.05, // Larger value works better for this camera frustum.\n      rangeFalloff: 0.01,\n      luminanceInfluence: 0.6,\n      radius: 30,\n      scale: 0.55,\n      bias: 0.5\n    })\n    const effectPass = new EffectPass(camera, smaaEffect, ssaoEffect)\n    effectPass.renderToScreen = true\n    composer.addPass(normalPass)\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n","import * as THREE from 'three';\nimport ReactDOM from 'react-dom';\nimport React, { Suspense, useCallback, useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport Effects from './Effects';\nimport DisplayText from './DisplayText'\n// import './styles.css'\n\n\n\nfunction Swarm({ type ,count, mouse }) {\n  const mesh = useRef()\n  const dummy = useMemo(() => new THREE.Object3D(), [])\n\n  const particles = useMemo(() => {\n    const temp = []\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 50\n      const factor = 20 + Math.random() * 100\n      const speed = 0.001 + Math.random() / 100\n      const xFactor = -10 + Math.random() * 60\n      const yFactor = -10 + Math.random() * 60\n      const zFactor = -100 + Math.random() * 60\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 })\n    }\n    return temp\n  }, [count])\n\n  useFrame(state => {\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n      t = particle.t += speed / 2\n      const a = Math.cos(t) + Math.sin(t * 1) / 10\n      const b = Math.sin(t) + Math.cos(t * 2) / 10\n      const s = Math.max(1.5, Math.cos(t) * 2)\n      particle.mx += (mouse.current[0] - particle.mx) * 0.04\n      particle.my += (-mouse.current[1] - particle.my) * 0.04\n      dummy.position.set(\n        (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n        (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n        (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n      )\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n\n  let display;\n    if (type==\"lineh\"){\n        display =  (\n             <instancedMesh ref={mesh} args={[null, null, count]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.2, 0.2, 0.1]} />\n            \n            <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\" />\n          </instancedMesh>\n        )\n    } else if(type==\"snowBall\"){\n     display= (  \n        <instancedMesh ref={mesh} args={[null, null, count]}>\n          <sphereBufferGeometry attach=\"geometry\" args={[20, 32, 32]} />\n          <meshPhongMaterial attach=\"material\" color=\"rgb(155, 155, 155)\"  transparent= \"true\" opacity=\"0.5\" />\n        </instancedMesh>\n      )\n    } else if(type==\"linev\"){\n        display= (  \n            <instancedMesh ref={mesh} args={[null, null, count]}>\n               <boxBufferGeometry attach=\"geometry\" args={[10, 15, 20]} />          \n                <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\"transparent= \"true\" opacity=\"0.4\" />\n            </instancedMesh>\n        )\n    }\n   \n\n  return (\n    <>\n        {display}\n      {/* <instancedMesh ref={mesh} args={[null, null, count]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\n        <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\" />\n      </instancedMesh> */}\n     \n     \n    </>\n  )\n}\n\nconst SwarmGroup=(props)=> {\n    let displayWord;\n    // console.log(props.isAbout)\n    if(props.isAbout){\n        // displayWord=(<DisplayText mouse={props.mouse} />) ;\n    } else if(!props.isAbout) {\n        // displayWord= null ;\n    }\n  \n  return (\n    // <div style={{ width: '100%', height: '100%' }} >\n      <div  className=\"canvasContainer\"  >\n        \n      <Canvas \n        gl={{ alpha: true, antialias: false, logarithmicDepthBuffer: true }}\n        camera={{ fov: 50, position: [0, 0, 70] }}\n        onCreated={({ gl }) => {\n          // gl.setClearColor('rgb(235, 235, 235)')\n          gl.toneMapping = THREE.ACESFilmicToneMapping\n          gl.outputEncoding = THREE.sRGBEncoding\n        }}>\n        <ambientLight intensity={1} />\n        <pointLight position={[100, 100, 100]} intensity={1.2} />\n        <pointLight position={[-100, -100, -100]} intensity={1} color=\"rgb(0, 0, 200)\" />\n        {/* <Swarm type='lineh' mouse={props.mouse} count={120} /> */}\n        {/* <Swarm type='linev' mouse={props.mouse} count={3} /> */}\n        <Swarm type='snowBall' mouse={props.mouse} count={5} />\n        \n        <Suspense fallback={null}>\n        {/* <Effects /> */}\n     \n        {/* <DisplayText mouse={props.mouse} /> */}\n        \n        </Suspense>\n\n  \n  \n      </Canvas>\n      \n    </div>\n  )\n}\n\nexport default SwarmGroup;\n","import React,{useEffect} from 'react';\nimport styles from './PortfolioContent.module.css';\nimport PortfolioData from './PortfolioData';\nimport ReactGa from 'react-ga';\n\nimport SplitText from \"react-pose-text\";\nimport TextFx from './TextFx';\n\nimport {useParams,useHistory,Redirect} from \"react-router-dom\"\n\n\n// simple two columns content layout\nconst PortfolioCotentV2 = (props)=>{\n  \n\n    let params=  useParams();\n    // console.log(params.id)\n  \n\n    let eachContent = PortfolioData;\n    // console.log(eachContent2[1])\n\n   \n\n    let history = useHistory();\n    const goBackHandler =()=>{\n      ReactGa.event({\n          category:'GoBack Button is Clicked',\n          action:`BackToHome`\n        });\n        history.push(\"/\");\n  \n  \n  }\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, []);\n\n      if(!(eachContent[params.id])) {\n        return <Redirect to=\"/404\" />\n    }\n\n    let videoShow ;\n        if(eachContent[params.id] && typeof eachContent[params.id].videoLink!='undefined'){\n        //    videoShow=  (<iframe src={`${eachContent[props.contentId].videoLink}?autoplay=1&loop=1&title=0&byline=0&portrait=0`} width=\"640\" height=\"330\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen></iframe>)\n           videoShow=  (\n            <div>  \n            {eachContent[params.id].videoLink.map((eachVideo, index)=>{\n            return(\n            <div key={\"video\"+index} className={styles.h_iframe}> \n             <iframe src={`${eachVideo}?autoplay=0&loop=1&title=0&byline=0&portrait=0`} frameBorder=\"0\" allow=\"autoplay; fullscreen\" allowFullScreen></iframe>\n             </div>\n             )\n           })\n           }\n           </div>\n         )\n        }\n   \n\n\n    let imgsShow; \n        if (eachContent[params.id]&& typeof eachContent[params.id].imgsScrs!='undefined'){\n            imgsShow = (\n                <>\n                { eachContent[params.id].imgsScrs.map((eachImg,index)=>{\n                    return (\n                        <img key={\"content\"+index} src={`/assets/projectImgs/${eachContent[params.id].imgFolder}/${eachImg}`} />\n                    )\n\n                })\n\n                }\n                </>\n            )\n        }\n\n        let ImgNVideo;\n        if(eachContent[params.id]&& eachContent[params.id].videoTop!='undefined' && eachContent[params.id].videoTop){\n            ImgNVideo=(\n                <>\n                {videoShow}\n                {imgsShow}\n                </>\n            )\n\n        } else {\n            ImgNVideo=(\n                <>\n                {imgsShow}\n                {videoShow}\n                </>\n            )\n        }\n\n        let buttonToWeb=null;\n        if(eachContent[params.id]&& eachContent[params.id].button!='undefined'&&eachContent[params.id].button){\n            buttonToWeb =(\n            <div>\n                {eachContent[params.id].button.map((eachButton,index)=>{\n                    return(\n                        <div  key={\"buttonout\"+index} className={styles.buttonToWeb}>\n                             <ReactGa.OutboundLink\n                                        eventLabel={eachContent[params.id].buttonName[index]+\" Button Clicked\"}\n                                        to={eachButton}\n                                        target=\"_blank\"\n                                        trackerNames={['tracker2']}\n                                        \n                                    >\n                                        \n                                        &nbsp;&gt; {eachContent[params.id].buttonName[index]}\n                                        \n                                        </ReactGa.OutboundLink>\n                        {/* <a target=\"_blank\" href={eachButton}> &nbsp;&gt; {eachContent[props.contentId].buttonName[index]}</a> */}\n                        </div>\n\n                        \n                    )\n                })\n            }\n\n            </div>)\n            \n        }\n\n\n    \n\n    return (\n<>\n<div >\n            <div onClick={goBackHandler} className=\"goBack noselect\">\n            <div  className=\"goBackIcon\"  />\n            <b> back </b>                 \n            </div>\n            </div>\n<div className=\"projectContentContainer\">  \n          <div className=\"gridContainer\">\n       \n        <div className={styles.contentContainer}>\n            <div className={styles.imgList}>\n            {ImgNVideo}\n            \n            </div>\n            <div className={styles.descriptionBar}>\n                <h1>\n                <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                    {eachContent[params.id].title}\n                 </SplitText>   \n                </h1>\n                <span> <b className={styles.toolList}> \n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                    {eachContent[params.id].tools}\n                    </SplitText>\n                    </b></span>\n                <p className={styles.descriptionText} dangerouslySetInnerHTML={{__html: eachContent[params.id].descriptions}}> \n                    \n                </p>\n                {buttonToWeb}\n                \n            </div>\n        </div>\n</div> \n</div>\n</>\n    )\n}\n\nexport default PortfolioCotentV2; ","import React ,{useState, useCallback, useRef, useEffect, Suspense} from 'react';\nimport './App.css';\nimport { useSpring, animated } from 'react-spring'\nimport  PortfolioBG  from './components/PortfolioBG';\nimport ImgGridSystem from './components/ImgGridSystem';\nimport Menu from './components/Menu';\n// import About from './components/About';\nimport SwarmGroup from './components/InteractiveBG/SwarmGroup';\nimport ReactGa from 'react-ga';\n\nimport PortfolioCotent from './components/PortfolioContentV2';\nimport {Route, NavLink,Link, BrowserRouter,useHistory, Switch, HashRouter,withRouter} from 'react-router-dom';\nconst About = React.lazy(()=>import('./components/About'));\nconst ErrorPage = React.lazy(()=>import('./components/ErrorPage'));\n\nfunction App() {\n \n  // let isAboutOpen =false;\n  function refreshPage() {\n    window.location.reload(true);\n  }\n\n\n  useEffect(()=>{\n    ReactGa.initialize('UA-169847537-1')\n    // const page = window.location.pathname;\n    // const hash = window.location.hash;\n    // console.log(hash)\n    // ReactGa.pageview(window.location.pathname+ window.location.search);\n    ReactGa.pageview(window.location.hash+ window.location.search);\n    // ReactGa.pageview(page)\n  })\n\n\n    // if(isAboutOpen){\n\n\n    // } else if(!isAboutOpen){\n\n    // }\n    const mouse = useRef([0, 0])\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), [])\n\n  return (\n    \n    <div className=\"App\"  onMouseMove={onMouseMove}>\n\n      {/* <div className=\"menu\"> \n          <div onClick={closeAboutPage} >most rencent project by Dan Ran</div>\n        <div onClick={aboutPage}>about</div>\n      </div> */}\n        {/* <PortfolioBG /> */}\n       \n      <SwarmGroup mouse={mouse} />\n        \n      <Menu />\n\n    <Switch>\n\n    <Route path='/About' exact>\n        <Suspense fallback={null}>   \n          <About />\n          <div className='footer'> <p> this website is built on React.js, Written by Dan Ran.</p></div>              \n        </Suspense>\n      </Route>\n    <Route path={'/:id/:name'} exact>\n          {/* <div className=\"gridContainer\"> */}\n                       \n                        <PortfolioCotent  />\n                   \n        {/* </div>   */}\n    </Route>\n    \n        \n\n\n      <Route path='/' exact>\n            <ImgGridSystem mouse={mouse}  />\n      </Route>\n\n   \n      <Route path=\"*\">\n      <Suspense fallback='null'>\n        <ErrorPage />        \n      </Suspense>\n          </Route>\n    \n    </Switch>\n      \n\n      \n    </div>\n    \n   \n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter, BrowserRouter} from 'react-router-dom';\nimport './fonts/FuturaBoldfont.ttf';\nimport './fonts/FuturaMediumBT.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__22vzR\",\"myName\":\"Menu_myName__3W7Hd\",\"recent\":\"Menu_recent__d49jy\",\"homeOn\":\"Menu_homeOn__C7MhB\",\"aboutOn\":\"Menu_aboutOn__2T6I2\",\"about\":\"Menu_about__3yWhZ\"};"],"sourceRoot":""}