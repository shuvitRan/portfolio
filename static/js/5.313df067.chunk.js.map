{"version":3,"sources":["components/GridImg.module.scss","components/PortfolioContent.module.css","components/GridImg.js","components/ImgGridSystem.js"],"names":["module","exports","GridImg","props","useSpring","xys","config","mass","tension","friction","animationCard","set","calc","x","y","window","innerHeight","innerWidth","className","styles","cardHoverContainer","cardContainer","div","onMouseOver","clientX","clientY","onMouseLeave","style","transform","interpolate","s","to","pathname","projectId","content","title","replace","imgContainer","eachImage","src","alt","overlay","textOverlay","onMouseMove","cardText","initialPose","pose","charPoses","TextFx","cardCate","category","cardCo","partner","ImgGridSystem","opacity","from","useState","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","useWindowSize","width","useRef","useEffect","scrollTo","gridimg","id","map","myimg","key"],"mappings":"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","file":"static/js/5.313df067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardHoverContainer\":\"GridImg_cardHoverContainer__1WtJD\",\"cardContainer\":\"GridImg_cardContainer__10oVb\",\"overlay\":\"GridImg_overlay__3hs27\",\"cardText\":\"GridImg_cardText__-k2gT\",\"eachImage\":\"GridImg_eachImage__37-tU\",\"textOverlay\":\"GridImg_textOverlay__38fxx\",\"cardCo\":\"GridImg_cardCo__3vKbq\",\"imgContainer\":\"GridImg_imgContainer__vIl-W\",\"cardCate\":\"GridImg_cardCate__EWxBt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"PortfolioContent_contentContainer__IhJEn\",\"toolList\":\"PortfolioContent_toolList__30-hx\",\"buttonToWeb\":\"PortfolioContent_buttonToWeb__3D_YO\",\"descriptionBar\":\"PortfolioContent_descriptionBar__tD86r\",\"fadein\":\"PortfolioContent_fadein__2PAsg\",\"imgList\":\"PortfolioContent_imgList__2ZZaW\",\"h_iframe\":\"PortfolioContent_h_iframe__U3Ma3\",\"descriptionText\":\"PortfolioContent_descriptionText__WIqNT\"};","import React,{useEffect, useRef} from 'react';\nimport ReactDOM from \"react-dom\";\nimport styles from \"./GridImg.module.scss\";\nimport SplitText from \"react-pose-text\";\nimport TextFx from './TextFx';\n// import React, {Suspense} from 'react-image'\n// import {useImage} from 'react-image'\n\nimport { NavLink, Switch} from 'react-router-dom';\nimport { useSpring, animated } from 'react-spring'\n\n\nconst GridImg = (props)=>{\n\n\n\n// const calc = (x, y) => [-(y - element.clientHeight / 2) / 30, (x - element.clientHeight / 2) / 30, 0.9]\n// const trans = (x, y, s) => `perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\nconst trans = (x, y, s) => `perspective(1000px) scale(${s}) `;\n// const trans2 = (x, y, s) => `perspective(700px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\nconst trans2 = (x, y) => `perspective(700px) rotateX(${x}deg) rotateY(${y}deg) `;\nconst [animationCard, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n\n// const cardref = useRef();\n\n// let cardX,cardY;\n// useEffect(() => {\n//     document.onreadystatechange = () => {\n//        cardX=cardref.current.clientHeight;\n//        cardY= cardref.current.clientWidth;\n//       console.log(cardref.current.clientHeight);\n//       console.log(cardref.current.clientWidth);\n//     };\n//   }, []);\n\n//   const calc = (x, y) => [-(y - window.innerHeight / 2) / 30, (x - window.innerWidth / 2) / 30, 0.9]\n\nconst calc = (x, y) => [-((y - window.innerHeight / 2) / ( window.innerHeight/2))*15, ((x - window.innerWidth / 2)/ ( window.innerWidth/2))*15]\n\n\n\n    return (\n        <>\n     <div  className ={styles.cardHoverContainer}  >\n        <div  className ={styles.cardContainer}  >\n        <animated.div \n                    onMouseOver={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: animationCard.xys.interpolate(trans) }}>\n                <NavLink to={{pathname:'/'+props.projectId+\"/\"+props.content.title.replace(/\\s/g, '')}} >\n           \n                \n                <div className={styles.imgContainer} >\n                    <img className={styles.eachImage}  src={\"/assets/projectImgs/\"+props.content.src } alt={props.content.title}/>\n               \n                    <div className={styles.overlay} >                   \n                    </div>\n                </div>\n               \n               \n                <div className={styles.textOverlay} >\n                <animated.div \n                    onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n                    onMouseLeave={() => set({ xys: [0, 0, 1] })}\n                    style={{ transform: animationCard.xys.interpolate(trans2) }}>\n                    <h1 className={styles.cardText}> \n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.title }\n                    </SplitText>    \n                    </h1>\n                    \n                 \n                    <div className={styles.cardCate}>\n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.category}\n                        </SplitText>\n                    </div>\n                    {/* <p className={styles.cardCo}>Web Application</p> */}\n\n                    <div className={styles.cardCo}>\n                    <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n                        {props.content.partner}\n                    </SplitText>\n                    </div>\n                    </animated.div>\n                </div>\n               \n               \n                </NavLink>  \n                </animated.div>\n        </div>\n        </div>\n        </>\n    )\n}\n\n\nexport default GridImg; ","import React, { useRef, useState, useEffect,useLayoutEffect }from 'react';\nimport ReactDOM from \"react-dom\";\n// import React, {Suspense} from 'react-image'\n// import {useImage} from 'react-image';\nimport GridImg  from './GridImg';\nimport PortfolioCotent from './PortfolioContent';\nimport {useSpring, animated} from 'react-spring';\nimport ReactGa from 'react-ga';\n// import gobackIcon from '../icons/chevron-left.svg';\n\nimport {Route, NavLink, Switch} from 'react-router-dom';\n\n//size Hook\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n  return size;\n}\n\n\nconst ImgGridSystem = (props)=>{\n\n   \n    const fadeinAnimation = useSpring({opacity: 1, from: {opacity: 0}})\n\n    let imgList = [\n        {id: 0, src: 'WCMA/WCMAHeader2.jpg', title: 'All AT ONCE - WCMA', partner:\"Studio TheGreenEyl\", category:\"creative web app\"},\n        {id: 1, src: 'TNC/TNCHeader2.jpg', title: 'MEGA CITY',partner:\"The Nature Conservancy\", category:\"web app, interactive storytelling\"},\n        {id: 2, src: 'Firis/FirisHeader2.jpg', title: 'FIRIS', partner:\"Cornell Start-up Studio\", category:\"ui/ux, product design, motion \"},\n        {id: 3, src: 'Met/METHeader.png', title: 'MET',partner:\"Metropolitan Museum of Art\", category:\"creative app\"},\n        {id: 4, src: 'Peeq/PeeqHeader.jpg', title: 'PEEQ',partner:\"Peeq Data Inc\", category:\"ui/ux, motion, video\" },\n        {id: 5, src: 'Games/GamesHeader2.jpg', title: 'BLUE DESERT DISCO', partner:\"Wonderville Brooklyn\", category:\"game development, physical computing\"}\n    ]; \n    // let isImgClicked = false;\n    // let activeId ='';\n    const [animationCard, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 60 } }))\n    // const trans = (x, y, s) => `perspective(1000px) scale(${s}) `;\n    const trans2 = (x, y, s) => `perspective(2500px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\n    \n    // const calc = (x, y) => [-(y - window.innerHeight / 2) / 150, (x - window.innerWidth / 2) / 150, 0.97]\n    // const calc = (x, y) => [-((y - window.innerHeight / 2) / ( window.innerHeight/2))*3, ((x - window.innerWidth / 2)/ ( window.innerWidth/2))*3, 0.97]\n    const [width, height] = useWindowSize();\n    let calc;\n        if(width>768){    \n        calc = (x, y) => [-((y - window.innerHeight / 2) / ( window.innerHeight/2))*4, ((x - window.innerWidth / 2)/ ( window.innerWidth/2))*4, 0.97]\n        } else{\n            calc = (x, y) => [0, 0, 1]\n        }\n    // const calc = (x, y) => [-(y - element.clientHeight / 2) / 30, (x - element.clientHeight / 2) / 30, 0.9]\n// const trans = (x, y, s) => `perspective(1000px) rotateX(${x}deg) rotateY(${y}deg) scale(${s}) `;\n\n    const cardref = useRef();\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0)\n      }, [])\n \n    \n \n      \n      let gridimg = null;\n  \n        gridimg=(\n          <animated.div \n          onMouseOver={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n          onMouseLeave={() => set({ xys: [0, 0, 1] })}\n          style={{ transform: animationCard.xys.interpolate(trans2) }}> \n           <div className=\"gridSystem\"> \n            \n            { imgList.map((myimg)=>{\n            return (\n                \n              \n                    <GridImg key={myimg.id} \n                             projectId={myimg.id}   \n                             content={myimg}\n                             />\n                       \n                    )\n            })}\n          \n           </div>\n           </animated.div>\n         )\n\n\n\n\n\n    return (\n        <>\n        \n        <div className=\"projectContentContainer\">  \n          <div className=\"gridContainer\">\n            {gridimg}\n          </div>\n        </div>\n            {/* {projectContent} */}\n         {/* </div> */}\n\n      \n        \n         </>\n    );\n\n\n}\n\nexport default ImgGridSystem ; "],"sourceRoot":""}