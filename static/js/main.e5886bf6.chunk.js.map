{"version":3,"sources":["components/Menu.module.scss","fonts/FuturaBoldfont.ttf","fonts/FuturaMediumBT.ttf","components/Menu.js","components/InteractiveBG/Effects.js","components/InteractiveBG/SwarmGroup.js","App.js","serviceWorker.js","index.js","components/TextFx.js"],"names":["module","exports","Menu","props","className","styles","menu","join","activeClassName","homeOn","to","pathname","exact","logo","recent","initialPose","pose","charPoses","TextFx","myName","aboutOn","about","_load","SMAAImageLoader","prototype","load","_","set","bind","this","Swarm","display","type","count","mouse","mesh","useRef","dummy","useMemo","THREE","particles","temp","i","t","Math","random","factor","speed","xFactor","yFactor","zFactor","push","mx","my","useFrame","state","forEach","particle","a","cos","sin","b","s","max","current","position","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","needsUpdate","ref","args","attach","color","transparent","opacity","SwarmGroup","isAbout","gl","alpha","antialias","logarithmicDepthBuffer","camera","fov","onCreated","toneMapping","outputEncoding","intensity","fallback","ImgGridSystem","React","lazy","PortfolioCotent","About","ErrorPage","withRouter","useEffect","ReactGa","initialize","pageview","window","location","hash","search","onMouseMove","useCallback","x","clientX","y","clientY","innerWidth","innerHeight","path","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","CharPoses","exit","enter","transition","delay","charInWordIndex","floor"],"mappings":"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","file":"static/js/main.e5886bf6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__qWFtP\",\"logo\":\"Menu_logo__lrPLh\",\"myName\":\"Menu_myName__I1zuI\",\"recent\":\"Menu_recent__13-Zi\",\"homeOn\":\"Menu_homeOn__3Op6e\",\"aboutOn\":\"Menu_aboutOn__3tJ_g\",\"about\":\"Menu_about__UflgI\"};","module.exports = __webpack_public_path__ + \"static/media/FuturaBoldfont.4c62644b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/FuturaMediumBT.ee64fb9d.ttf\";","import React, {useEffect} from 'react';\nimport { render } from '@testing-library/react';\nimport styles from './Menu.module.scss';\nimport SplitText from \"react-pose-text\";\nimport TextFx from './TextFx'\nimport {NavLink} from 'react-router-dom';\n\nconst Menu=(props)=>{\n    \n \n    return (\n        <div className={[styles.menu, \"noselect\"].join(' ')}> \n        \n          {/* <div className={(props.isAbout?styles.homeOff:styles.homeOn)} onClick={props.onClickHome} > */}\n          <NavLink \n                activeClassName={styles.homeOn}\n                to={{pathname:'/'}}                 \n                exact > \n          <div className={styles.logo} >\n          < span className={styles.recent}>\n        \n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n           recent by\n          </SplitText>\n         \n          </span>\n         \n             < span className={styles.myName}> \n          <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n            dān rǎn\n          </SplitText>\n          </span> \n          </div>\n          </NavLink>\n        {/* </div> */}\n        \n        {/* <div className={(!props.isAbout?styles.aboutOff:styles.aboutOn)} onClick={props.onClickAbout}> */}\n       \n        <NavLink \n                activeClassName={styles.aboutOn}\n                to={{pathname:'/About'}}                 \n                > \n        < span className={styles.about}> \n        <SplitText initialPose=\"exit\" pose=\"enter\" charPoses={TextFx}>\n            about\n            </SplitText>\n        </span>\n        </NavLink>\n        {/* </div> */}\n        \n        \n      </div>\n\n    )\n\n}\n\nexport default Menu;","import { useMemo, useEffect } from 'react'\nimport { useLoader, useThree, useFrame } from 'react-three-fiber'\nimport { SMAAImageLoader, BlendFunction, EffectComposer, EffectPass, RenderPass, SMAAEffect, SSAOEffect, NormalPass } from 'postprocessing'\n\n// Fix smaa loader signature\nconst _load = SMAAImageLoader.prototype.load\nSMAAImageLoader.prototype.load = function(_, set) {\n  return _load.bind(this)(set)\n}\n\nexport default function Post() {\n  const { gl, scene, camera, size } = useThree()\n  const smaa = useLoader(SMAAImageLoader)\n  const composer = useMemo(() => {\n    const composer = new EffectComposer(gl)\n    composer.addPass(new RenderPass(scene, camera))\n    const smaaEffect = new SMAAEffect(...smaa)\n    smaaEffect.colorEdgesMaterial.setEdgeDetectionThreshold(0.1)\n    const normalPass = new NormalPass(scene, camera)\n    const ssaoEffect = new SSAOEffect(camera, normalPass.renderTarget.texture, {\n      blendFunction: BlendFunction.MULTIPLY,\n      samples: 30,\n      rings: 4,\n      distanceThreshold: 1, // Render distance depends on camera near&far.\n      distanceFalloff: 0.0, // No need for falloff.\n      rangeThreshold: 0.05, // Larger value works better for this camera frustum.\n      rangeFalloff: 0.01,\n      luminanceInfluence: 0.6,\n      radius: 30,\n      scale: 0.55,\n      bias: 0.5\n    })\n    const effectPass = new EffectPass(camera, smaaEffect, ssaoEffect)\n    effectPass.renderToScreen = true\n    composer.addPass(normalPass)\n    composer.addPass(effectPass)\n    return composer\n  }, [])\n\n  useEffect(() => void composer.setSize(size.width, size.height), [size])\n  return useFrame((_, delta) => composer.render(delta), 1)\n}\n","import * as THREE from 'three';\nimport ReactDOM from 'react-dom';\nimport React, { Suspense, useCallback, useRef, useMemo } from 'react';\nimport { Canvas, useFrame } from 'react-three-fiber';\nimport Effects from './Effects';\nimport DisplayText from './DisplayText';\n// import './styles.css'\n\n// import MyModel from '../myModel/MyModel';\n\n\n\nfunction Swarm({ type ,count, mouse }) {\n  const mesh = useRef()\n  const dummy = useMemo(() => new THREE.Object3D(), [])\n\n  const particles = useMemo(() => {\n    const temp = []\n    for (let i = 0; i < count; i++) {\n      const t = Math.random() * 50\n      const factor = 20 + Math.random() * 100\n      const speed = 0.001 + Math.random() / 100\n      const xFactor = -10 + Math.random() * 60\n      const yFactor = -10 + Math.random() * 60\n      const zFactor = -100 + Math.random() * 60\n      temp.push({ t, factor, speed, xFactor, yFactor, zFactor, mx: 0, my: 0 })\n    }\n    return temp\n  }, [count])\n\n  useFrame(state => {\n    particles.forEach((particle, i) => {\n      let { t, factor, speed, xFactor, yFactor, zFactor } = particle\n      t = particle.t += speed / 2\n      const a = Math.cos(t) + Math.sin(t * 1) / 10\n      const b = Math.sin(t) + Math.cos(t * 2) / 10\n      const s = Math.max(1.5, Math.cos(t) * 2)\n      particle.mx += (mouse.current[0] - particle.mx) * 0.04\n      particle.my += (-mouse.current[1] - particle.my) * 0.04\n      dummy.position.set(\n        (particle.mx / 10) * a + xFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 1) * factor) / 10,\n        (particle.my / 10) * b + yFactor + Math.sin((t / 10) * factor) + (Math.cos(t * 2) * factor) / 10,\n        (particle.my / 10) * b + zFactor + Math.cos((t / 10) * factor) + (Math.sin(t * 3) * factor) / 10\n      )\n      dummy.scale.set(s, s, s)\n      dummy.updateMatrix()\n      mesh.current.setMatrixAt(i, dummy.matrix)\n    })\n    mesh.current.instanceMatrix.needsUpdate = true\n  })\n\n\n  let display;\n    if (type==\"lineh\"){\n        display =  (\n             <instancedMesh ref={mesh} args={[null, null, count]}>\n            <boxBufferGeometry attach=\"geometry\" args={[0.2, 0.2, 0.1]} />\n            \n            <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\" />\n          </instancedMesh>\n        )\n    } else if(type==\"snowBall\"){\n     display= (  \n        <instancedMesh ref={mesh} args={[null, null, count]}>\n          <sphereBufferGeometry attach=\"geometry\" args={[20, 32, 32]} />\n          \n          <meshLambertMaterial attach=\"material\" color=\"rgb(35, 35, 35)\"  transparent= \"true\" opacity=\"0.5\" />\n          {/* <meshNormalMaterial attach=\"material\" color=\"rgb(35, 35, 35)\"  transparent= \"true\" opacity=\"0.1\" /> */}\n        </instancedMesh>\n      )\n    } else if(type==\"linev\"){\n        display= (  \n            <instancedMesh ref={mesh} args={[null, null, count]}>\n               <boxBufferGeometry attach=\"geometry\" args={[10, 15, 20]} />          \n                <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\"transparent= \"true\" opacity=\"0.4\" />\n            </instancedMesh>\n        )\n    }\n   \n\n  return (\n    <>\n        {display}\n      {/* <instancedMesh ref={mesh} args={[null, null, count]}>\n        <sphereBufferGeometry attach=\"geometry\" args={[1, 32, 32]} />\n        <meshPhongMaterial attach=\"material\" color=\"rgb(245, 245, 245)\" />\n      </instancedMesh> */}\n     \n     \n    </>\n  )\n}\n\nconst SwarmGroup=(props)=> {\n    let displayWord;\n    // console.log(props.isAbout)\n    if(props.isAbout){\n        // displayWord=(<DisplayText mouse={props.mouse} />) ;\n    } else if(!props.isAbout) {\n        // displayWord= null ;\n    }\n  \n  return (\n    // <div style={{ width: '100%', height: '100%' }} >\n      <div  className=\"canvasContainer\"  >\n        \n      <Canvas \n        gl={{ alpha: true, antialias: false, logarithmicDepthBuffer: true }}\n        camera={{ fov: 50, position: [0, 0, 30] }}\n        onCreated={({ gl }) => {\n          // gl.setClearColor('rgb(235, 235, 235)')\n          gl.toneMapping = THREE.ACESFilmicToneMapping\n          gl.outputEncoding = THREE.sRGBEncoding\n        }}>\n        <ambientLight intensity={0.1} />\n        {/* <pointLight position={[100, 100, 100]} intensity={0.1} /> */}\n        <pointLight position={[-100, -100, -100]} intensity={0.8} color=\"rgb(30, 30, 30)\" />\n        <pointLight position={[100, 100, 100]} intensity={0.3} color=\"rgb(65, 15, 10)\" />\n        <pointLight position={[-100, 100, 100]} intensity={0.5} color=\"rgb(50, 54, 100)\" />\n        {/* <Swarm type='lineh' mouse={props.mouse} count={120} /> */}\n        {/* <Swarm type='linev' mouse={props.mouse} count={3} /> */}\n        <Swarm type='snowBall' mouse={props.mouse} count={6} />\n        \n        <Suspense fallback={null}>\n        {/* <Effects /> */}\n     \n        {/* <DisplayText mouse={props.mouse} /> */}\n       \n        </Suspense>\n        {/* <MyModel /> */}\n  \n  \n      </Canvas>\n      \n    </div>\n  )\n}\n\nexport default SwarmGroup;\n","import React ,{useState, useCallback, useRef, useEffect, Suspense} from 'react';\nimport './App.scss';\n// import './_base.scss';\nimport { useSpring, animated } from 'react-spring'\n\n// import ImgGridSystem from './components/ImgGridSystem';\nimport Menu from './components/Menu';\n// import About from './components/About';\nimport SwarmGroup from './components/InteractiveBG/SwarmGroup';\nimport ReactGa from 'react-ga';\n\n// import PortfolioCotent from './components/PortfolioContentV2';\nimport {Route, NavLink,Link, BrowserRouter,useHistory, Switch, HashRouter,withRouter} from 'react-router-dom';\n\nconst ImgGridSystem = React.lazy(()=>import('./components/ImgGridSystem'));\nconst PortfolioCotent = React.lazy(()=>import('./components/PortfolioContentV2'));\nconst About = React.lazy(()=>import('./components/About'));\nconst ErrorPage = React.lazy(()=>import('./components/ErrorPage'));\n\nfunction App() {\n \n  // let isAboutOpen =false;\n  function refreshPage() {\n    window.location.reload(true);\n  }\n\n\n  useEffect(()=>{\n    ReactGa.initialize('UA-169847537-1')\n    // const page = window.location.pathname;\n    // const hash = window.location.hash;\n    // console.log(hash)\n    // ReactGa.pageview(window.location.pathname+ window.location.search);\n    ReactGa.pageview(window.location.hash+ window.location.search);\n    // ReactGa.pageview(page)\n  })\n\n\n    // if(isAboutOpen){\n\n\n    // } else if(!isAboutOpen){\n\n    // }\n    const mouse = useRef([0, 0])\n    const onMouseMove = useCallback(({ clientX: x, clientY: y }) => (mouse.current = [x - window.innerWidth / 2, y - window.innerHeight / 2]), [])\n\n  return (\n    \n    <div className=\"App\"  onMouseMove={onMouseMove}>\n\n      {/* <div className=\"menu\"> \n          <div onClick={closeAboutPage} >most rencent project by Dan Ran</div>\n        <div onClick={aboutPage}>about</div>\n      </div> */}\n        {/* <PortfolioBG /> */}\n       \n      <SwarmGroup mouse={mouse} />\n        \n      <Menu />\n\n    <Switch>\n\n    <Route path='/About' exact>\n        <Suspense fallback={null}>   \n          <About />\n          <div className='footer'> <p> this website is built on React.js, Written by Dan Ran.</p></div>              \n        </Suspense>\n      </Route>\n    <Route path={'/:id/:name'} exact>\n          {/* <div className=\"gridContainer\"> */}\n          <Suspense fallback='null'>  \n                        <PortfolioCotent  />\n          </Suspense>\n        {/* </div>   */}\n    </Route>\n    \n        \n\n    \n      <Route path='/' exact>\n      <Suspense fallback={<h1>Loading</h1>}>    \n            <ImgGridSystem mouse={mouse}  />\n            </Suspense>\n      </Route>\n      \n   \n      <Route path=\"*\">\n      <Suspense fallback='null'>\n        <ErrorPage />        \n      </Suspense>\n          </Route>\n    \n    </Switch>\n      \n\n      \n    </div>\n    \n   \n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter, BrowserRouter} from 'react-router-dom';\nimport './fonts/FuturaBoldfont.ttf';\nimport './fonts/FuturaMediumBT.ttf';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n    <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\n const CharPoses =  {\n    exit: { opacity: 0, y: 0 },\n    enter: {\n      opacity: 1,\n      y: 0,\n  \n      transition: ({ charInWordIndex }) => ({\n        type: \"spring\",\n        \n        // delay: charInWordIndex * 130\n        delay: charInWordIndex + Math.floor(Math.random() * 10) * 150\n        // stiffness: 500 + charInWordIndex * 1,\n        // damping: 10 - charInWordIndex * 1\n      })\n    }\n  };\n  export default CharPoses;"],"sourceRoot":""}